前情回顾

1. 文件读写

   分类 ： 文本   二进制

   字节串 ： 一段二进制数据内容
            b"hello"
            encode()   str --> bytes
            decode()   bytes --> str

   open()  --> read / write --> close

   r  w   a   +   b

2. 细节处理

   * 缓冲区 ： 减少和硬盘的交互次数，提高读写效率

     buffering   flush()

   * 文件偏移量 ： tell()   seek(10,0)

练习1： 编写一个函数，传入一个文件夹，删除掉该
文件夹中 小于 100kb的普通文件。


正则表达式练习：

1. 匹配大写字母开头的单词 Hi Jame,How are you

In [34]: re.findall('[A-Z][a-z]*',"Hi Jame,How ar
    ...: e you")
Out[34]: ['Hi', 'Jame', 'How']

2. 匹配字符串中的数字  “张三: 22,体重 78 kg”
In [36]: re.findall('[0-9]+',"张三: 22,体重 78 kg
    ...: ")
Out[36]: ['22', '78']

3. 匹配一组整数， 存在正数和负数  22  89 -9 -192
In [44]: re.findall('-?[0-9]+',"22  89 -9 -192")
Out[44]: ['22', '89', '-9', '-192']

4. 匹配手机号码    貂蝉: 18837383940
In [47]: re.findall('1[35678][0-9]{9}',"貂蝉: 188
    ...: 37383940")
Out[47]: ['18837383940']

5. 匹配qq号码
In [51]: re.findall('[1-9][0-9]{4,10}',"qq:125929
    ...: 6994")
Out[51]: ['1259296994']

6. 匹配大写字母开头的单词
Hi  I  NBA  hello  iPython

In [75]: re.findall(r'\b[A-Z]+[a-z]*\b',"Hi  I  N
    ...: BA  hello  iPython")
Out[75]: ['Hi', 'I', 'NBA']

7. 匹配薪资    日薪: $150
In [81]: re.findall(r'\$\d+',"日薪：$150")
Out[81]: ['$150']

8. 匹配书名
《再见——我的爱人》
《hi,2022》
《火星文～～ 啦啦啦》

re.findall(r'《.+?》',"《再见——我的爱人
    ...: 》《hi,2022》《火星文～～ 啦啦啦》")
Out[97]: ['《再见——我的爱人》', '《hi,2022》', '《火星文～～ 啦啦啦》']

9. 匹配一下 IP地址  192.168.1.5  每部分0-255
In [110]: re.search(r'(\d{1,3}\.){3}\d{1,3}',"192
     ...: .168.4.52").group()
Out[110]: '192.168.4.52'

10. 匹配身份证号

re.search(r'\d{17}(x|\d)',"110010199902051020").gr
   ...: oup()

cookie : https://tool.oschina.net/regex/#

作业： 1. 熟练正则表达式元字符
      2. 基于 log.txt文档
      编写一个函数传入一个端口的名称，返回这个端口
      对应的 address值
      address is  10f3.116c.e6a7

      提示： 每段之间有空行
            每段的收个单词是端口名称
            有的段没有这个值，或者端口传错的情况